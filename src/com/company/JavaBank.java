package com.company;

import java.util.*;


public class JavaBank {

    // this hashmap declaration allows the programs methods to access a private HashMap field.
    private static Map<String, String> javaBank = new HashMap<>();

    static {
        javaBank.put("case", "introduces one of several possible paths of execution in a switch statement.");
        javaBank.put("catch", "introduces statements that are executed when something interrupts the flow of execution in a try clause.");
        javaBank.put("char", "the data type that indicates that a value is a character( a single letter digit, punctuation symbol, and so on) stored in 16 bits of memory");
        javaBank.put("class", "a blueprint for an object ");
        javaBank.put("default", "introduces a path of execution to take when no case is a match in a switch statement.");
        javaBank.put("extends", "this word helps create a subclass - a class that reuses functionality from a previously defined class. ");
        javaBank.put("byte", "indicates that a value is an 8-bit whole number.");
        javaBank.put("boolean", "indicates that a value is either true or false.");
        javaBank.put("ASCII", "American Standard Code for Information Interchange. A standard assignment of 7-bit numeric codes to characters");
        javaBank.put("bytecode", "Machine-independent code generated by the Java compiler and executed by the Java interpreter.");
        javaBank.put("break", "A Java keyword used to resume program execution at the statement immediately following the current statement.");
        javaBank.put("casting", "Explicit conversion from one data type to another.");
        javaBank.put("continue", "A Java keyword used to resume program execution at the end of the current loop.");
        javaBank.put("do", "A Java keyword used to declare a loop that will iterate a block of statements");
        javaBank.put("else", "A Java keyword used to execute a block of statements in the case that the test condition with the if keyword evaluates to false.");
        javaBank.put("if", "A Java keyword used to conduct a conditional test and execute a block of statements if the test evaluates to true.");
        javaBank.put("implements", "A Java keyword included in the class declaration to specify any interfaces that are implemented by the current class");
        javaBank.put("java", "Sunâ€™s trademark for a set of technologies for creating and safely running software programs in both stand-alone and networked environments.");
        javaBank.put("enum", "A Java keyword used to declare an enumerated type.");
    }

    public static void startGame(){
    Scanner keyboard = new Scanner(System.in);

    System.out.println("Hello! Welcome to the D & N JavaTrainer 1.0, ");
    System.out.println("Please enter 1 to begin the Java Trainer. ");
    System.out.println("Please enter 2 to begin the Java Quiz. ");
    System.out.println("Please enter 3 to quit. ");
    int userInput = keyboard.nextInt();
    boolean quit = false;
    while(quit == false ){
        switch(userInput) {
            case 1:
                javaTrainer();
                break;
            case 2:
                javaQuiz1();
                break;
            case 3:
                quit = true;
                break;
            default:
                System.err.println("Would you please enter a valid number?");
                break;
            }
        }//ends while loop
    }//ends start game method

    public static void javaTrainer() {
        Scanner keyboard = new Scanner(System.in); //create a scanner
        System.out.println("Hello! Please enter a word that you would like to study. :-) ");
        String userInput = keyboard.next().toLowerCase();

        Set<String> keys = javaBank.keySet();

        //for loop that iterates through the set of keys and prints out the values based on userInput :
        for (String s : keys) {
            if (userInput.equals(s)) {
                System.out.println(s + ": " + javaBank.get(s));
                break;
            }
        } //ends for loop


        // this for loop iterates through the hashmap to check if the userInputed value is there, and if not it will return an error.
        for (String s : keys) {
            if (!userInput.equals(s)) {
                System.out.println("Welp! ... I think you should try again.");
                keepStudying();
            }
            break;
        } //ends for loop
    } // ends javaTrainer() method.


    public static void keepStudying() {
        boolean userInputTrue = false;
        while (userInputTrue == false) {
            Scanner keyboard = new Scanner(System.in);
            System.out.println(" Would you like to keep playing?? ");
            String userInput = keyboard.next().toLowerCase();

            switch (userInput) {
                case "yes":
                    javaTrainer();
                    break;
                case "no":
                    System.out.println("Thanks for playing Darnell & Niema's javaTrainer... Keep Studying to take the Java-Quiz. ");
                    break;

                default:
                    System.err.println("Come on. It was a Yes or No question... what did you enter? ");
                    break;
            } //ends switch
            userInputTrue = true;
        }  //ends while loop
    }//ends keepStudying() method:

    /* These sets of randomAnswers methods ; return a string
     of values depending on a random key from the javaBank
    * */
    public static String getRandomAnswers() {
        Random generator = new Random();
        Object[] values = javaBank.values().toArray();
        //these call different values per question.
        String value1 = (String) values[generator.nextInt(values.length)];
        return value1;
    }


    public static void javaQuiz1() {
        Scanner keyboard = new Scanner(System.in); //creates a scanner:


        //---------- QUESTION #1 ---------- :
        System.out.println("Question#1: What is a case?");

        //these print out the question answers 1-3:
        String answer = javaBank.get("case"); //this gives us the value of the key: "case"
        System.out.println("#1: " + getRandomAnswers());
        System.out.println("#2: " + getRandomAnswers());
        System.out.println("#3: " + answer);
        int userInput = keyboard.nextInt();

        int count = 0; // initializing an accumulator:

        //checks if user input is correct:
        switch (userInput) {
            case 3:
                count++;
                System.out.println("Congratulations!! You got this question right. Now you have " + count + " points.");
                System.out.println("Are you ready for the next question?");
                System.out.println("That wasn't a question for you.... You'll be answering the next question whether you'd like to or not haha..");
                break;
            default:
                System.out.println("Wow... it looks like you need to spend more time studying bro.. haha");
                break;
        }
        System.out.println("\n");

        //---------- QUESTION 2 ----------:
        System.out.println("What is a char?");
        //these print out the question answers 1-3:
        answer = javaBank.get("char"); //this gives us the value of the key: "char"
        System.out.println("#1: " + getRandomAnswers());
        System.out.println("#2: " + answer);
        System.out.println("#3: " + getRandomAnswers());

        userInput = keyboard.nextInt(); //user answers:

        //checks if user input is correct:
        switch (userInput) {
            case 2:
                count++;
                System.out.println("Congratulations!! You got this question right. Now you have " + count + " points.");
                System.out.println(".. looks like we're moving along now...");
                break;
            default:
                System.out.println("Wow... it looks like you need to spend more time studying bro.. haha");
                break;
        }
        System.out.println("\n");

        //---------- QUESTION 3 ----------:
        System.out.println("Question #3:");
        System.out.println("What does the keyword, extends, do in a program?");
        // this set of code gives us answers 1-3:
        answer = javaBank.get("extends"); //this gives us the value of the key: "extends"
        System.out.println("#1: " + answer);
        System.out.println("#2: " + getRandomAnswers());
        System.out.println("#3: " + getRandomAnswers());
        userInput = keyboard.nextInt(); //user answer:

        //checks if user input is correct:
        switch (userInput) {
            case 1:
                count++;
                System.out.println("Congratulations!! You got this question right. Now you have " + count + " points.");
                System.out.println(".. looks like we're moving along quick, quick , quick!");
                break;
            default:
                System.out.println("Wow... it looks like you need to spend more time studying bro.. haha");
                break;
        }
        System.out.println("\n");

        //---------- QUESTION 4 ----------:
        System.out.println("Question #4:");
        System.out.println("What values do boolean type variables return?");
        // this set of code gives us answers 1-3:
        answer = javaBank.get("boolean"); //this gives us the value of the key: "boolean "
        System.out.println("#1: " + answer);
        System.out.println("#2: " + getRandomAnswers());
        System.out.println("#3: " + getRandomAnswers());
        userInput = keyboard.nextInt(); //user answer:

        //checks if user input is correct:
        switch (userInput) {
            case 1:
                count++;
                System.out.println("Congratulations!! You got this question right. Now you have " + count + " points.");
                System.out.println(".. what a smart ass ...");
                break;
            default:
                System.out.println("Wow... it looks like you need to spend more time studying bro.. haha");
                break;
        }
        System.out.println("\n");


        //---------- QUESTION 5 ----------:
        System.out.println("What exactly is the casting process in java? ");
        // this set of code gives us answers 1-3:
        answer = javaBank.get("casting"); //this gives us the value of the key: "casting"
        System.out.println("#1: " + getRandomAnswers());
        System.out.println("#2: " + answer);
        System.out.println("#3: " + getRandomAnswers());
        userInput = keyboard.nextInt(); //user answer:

        //checks if user input is correct:
        switch (userInput) {
            case 2:
                count++;
                System.out.println("Congratulations!! You got this question right. Now you have " + count + " points.");
                System.out.println(".. keep going ... you're almost at the end ");
                break;
            default:
                System.out.println("Wow... it looks like you need to spend more time studying bro.. haha");
                break;
        }
        System.out.println("\n");


        //---------- QUESTION 6 ----------:
        System.out.println("Question #6: ");
        System.out.println("What does the it mean to implement a program?");
        // this set of code gives us answers 1-3:
        answer = javaBank.get("implements"); //this gives us the value of the key: "implements"
        System.out.println("#1: " + getRandomAnswers());
        System.out.println("#2: " + getRandomAnswers());
        System.out.println("#3: " + answer);
        userInput = keyboard.nextInt(); //user answer:

        //checks if user input is correct:
        switch (userInput) {
            case 3:
                count++;
                System.out.println("Congratulations!! You got this question right. Now you have " + count + " points.");
                System.out.println(".. looks like we're moving along quite nicely now...");
                break;
            default:
                System.out.println("Wow... it looks like you need to spend more time studying bro.. haha");
                break;
        }
        System.out.println("\n");


        //---------- QUESTION 7 ----------:
        System.out.println("Question #7:");
        System.out.println("What does the keyword, default, do in a switch program?");
        // this set of code gives us answers 1-3:
        answer = javaBank.get("default"); //this gives us the value of the key: "default"
        System.out.println("#1: " + getRandomAnswers());
        System.out.println("#2: " + answer);
        System.out.println("#3: " + getRandomAnswers());
        userInput = keyboard.nextInt(); //user answer:

        //checks if user input is correct:
        switch (userInput) {
            case 2:
                count++;
                System.out.println("Congratulations!! You got this question right. Now you have " + count + " points.");
                System.out.println(".. looks like we're moving along quite nicely now...");
                break;
            default:
                System.out.println("Wow... it looks like you need to spend more time studying bro.. haha");
                break;
        }
        System.out.println("\n");


        //---------- QUESTION 8 ----------:
        System.out.println("Question #8: ");
        System.out.println("What is bytecode?");
        // this set of code gives us answers 1-3:
        answer = javaBank.get("bytecode"); //this gives us the value of the key: "bytecode"
        System.out.println("#1: " + answer);
        System.out.println("#2: " + getRandomAnswers());
        System.out.println("#3: " + getRandomAnswers());
        userInput = keyboard.nextInt(); //user answer:

        //checks if user input is correct:
        switch (userInput) {
            case 1:
                count++;
                System.out.println("Congratulations!! You got this question right. Now you have " + count + " points.");
                System.out.println(".. looks like we're moving along quite nicely now...");
                break;
            default:
                System.out.println("Wow... it looks like you need to spend more time studying bro.. haha");
                break;
        }
        System.out.println("\n");


        //---------- QUESTION 9 ----------:
        System.out.println("Question 9:");
        System.out.println("What does the if statement do in java?");
        // this set of code gives us answers 1-3:
        answer = javaBank.get("if"); //this gives us the value of the key: "if"
        System.out.println("#1: " + getRandomAnswers());
        System.out.println("#2: " + getRandomAnswers());
        System.out.println("#3: " + answer);
        userInput = keyboard.nextInt(); //user answer:

        //checks if user input is correct:
        switch (userInput) {
            case 3:
                count++;
                System.out.println("Congratulations!! You got this question right. Now you have " + count + " points.");
                System.out.println(".. looks like we're moving along quite nicely now...");
                break;
            default:
                System.out.println("Wow... it looks like you need to spend more time studying bro.. haha");
                break;
        }
        System.out.println("\n");


        //---------- QUESTION 10 ----------:
        System.out.println("What does the keyword, break, do in a java program?");
        // this set of code gives us answers 1-3:
        answer = javaBank.get("break"); //this gives us the value of the key: "break"
        System.out.println("#1: " + answer);
        System.out.println("#2: " + getRandomAnswers());
        System.out.println("#3: " + getRandomAnswers());
        userInput = keyboard.nextInt(); //user answer:

        //checks if user input is correct:
        switch (userInput) {
            case 1:
                count++;
                System.out.println("Congratulations!! You got this question right. Now you have " + count + " points.");
                System.out.println(".. looks like we're moving along quite nicely now...");
                break;
            default:
                System.out.println("Wow... it looks like you need to spend more time studying bro.. haha");
                break;
        }
        System.out.println("\n");

        if (count > 9) {
            System.out.println("Your total score is: " + count + ". Wow.. You're a Java JEDI !!! :-).");
        } else if (count > 7) {
            System.out.println("Your total score is: " + count + ". Good job, you're on your way to becoming a Java Master! :-)");
        } else if (count > 4) {
            System.out.println("Your total score is: " + count + ". You did all right. But you need to study some more. :/");
        } else if (count > 0) {
            System.out.println("Your total score is: " + count + ". My guy, you really need to study!!!! >:( ");
        }

    } //ends JavaBank Class
}